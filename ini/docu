
1. System Overview
  Surevice is a platform connecting customers with service providers offering various services. The system supports user management, service listings, bookings, payments, reviews, and provider verification workflows.
    - Users can be customers, providers, or admins.
    - Providers list services and upload verification documents.
    - Admins manage users, verify providers, oversee bookings and payments.
    - Customers book services and pay through the system.

2. Database Schema Overview
  Users -	Stores user information, roles (customer/provider/admin), status, and verification flags.
  Services - Contains service listings created by providers.
  Bookings - Records customer bookings for services.
  Payments - Tracks payment details linked to bookings.
  Wallets	- Manages provider earnings and balances.
  Reviews	- Allows customers to rate and comment on completed services.
  ServiceImages	- Stores images for each service, supporting a primary image.
  Categories	- Holds categories to organize services.
  ServiceCategoryLink	- Links services to multiple categories (many-to-many).
  Addresses	- Stores multiple addresses per user, with default flags.
  ProviderDocuments	- Stores uploaded verification documents by providers.

3. Core Functional Modules
3.1 User Management
  - Users register as customers or providers.
  - Admins can approve, suspend, or reactivate users.
  - account_status field controls current state (Pending, Active, Suspended, Deactivated).
  - is_verified flag indicates if a provider's identity is confirmed.
  - Customers can save their address and edit their profile details every 14 days.
 
3.2 Service Management
  - Providers create service listings with titles, descriptions, fees, and images.
  - Services can be active or inactive.
  - Services linked to one or more categories for filtering.
  - Average rating calculated from reviews.

3.3 Booking and Payment
  - Customers book services for specific dates.
  - Booking status: pending, in_progress, completed, cancelled.
  - Payments linked to bookings with status (held, released, refunded).
  - Provider earnings tracked in wallets, updated after payment release.

3.4 Provider Verification
  - Providers upload documents stored in ProviderDocuments.
  - Admins review documents to approve or reject.


4. Surevice System Architecture Diagram
[User Registers/Login]
        |
        v
[Users Table] ---------------------------+
        |                                |
        |                                v
        |                          [Addresses Table]
        |                                |
        |                                v
        |                        [ProviderDocuments] (if provider)
        |
        v
[Creates Service] ------------------> [Services Table]
        |                                |
        |                                +--> [ServiceImages Table]
        |                                |
        |                                +--> [ServiceCategoryLink] <--> [Categories Table]
        |
        v
[Customer Browses & Books Service]
        |
        v
[Bookings Table]
        |
        +--> [Payments Table]
        |        |
        |        v
        |  [Wallets Table] (for provider earnings)
        |
        v
[Reviews Table] (optional)

  4.1. User Registration and Management
  - Users table stores all types of users: customer, provider, admin.
  - Upon registration:
      - user_type, is_verified, and account_status are set.
      - Addresses can be added by users (e.g., home/work).
      - ProviderDocuments can be uploaded for verification.
        - Admin reviews and changes status of documents.
      - Admin can change account_status to "Active" or "Suspended".

  4.2. Provider Service Management
  - A provider creates a Service:
    - Linked to their user_id.
    - Described by title, description, service_fee, etc.
    - Each Service can have:
      - ServiceImages (optional; supports primary image).
      - Multiple Categories via ServiceCategoryLink.

  4.3. Customer Booking Flow
  - A customer browses and selects a Service to book:
    - A Booking entry is created:
      - Linked to the selected service_id and the customer_id.
      - Contains booking status and scheduled_for datetime.

  4.4. Payments and Wallets
  - When a booking is paid:
    - A Payment record is created:
      - Linked to booking_id, and stores amount, fee_deducted, provider_earnings.
    - Payment status transitions from held to released.
  - Provider earnings go to the Wallets table:
    - Tracks balance and last_updated.

  4.5. Post-Booking Actions
  - After a booking is completed, the customer may:
    - Leave a Review (optional):
      - Linked to booking_id.
      - Stores rating and comment.

